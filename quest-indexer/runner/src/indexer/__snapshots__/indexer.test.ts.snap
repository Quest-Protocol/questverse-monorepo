// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Indexer unit tests Indexer.buildContext() can fetch from the near social api 1`] = `
[
  [
    "https://api.near.social/index",
    {
      "body": "{"action":"post","key":"main","options":{"limit":1,"order":"desc"}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
]
`;

exports[`Indexer unit tests Indexer.runFunctions() allows imperative execution of GraphQL operations 1`] = `
[
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"mutation writeLog($function_name: String!, $block_height: numeric!, $message: String!){\\n                insert_indexer_log_entries_one(object: {function_name: $function_name, block_height: $block_height, message: $message}) {id}\\n             }","variables":{"function_name":"buildnear.testnet/test","block_height":82699904,"message":"Running function buildnear.testnet/test, lag is: NaNms from block timestamp"}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"\\n                mutation SetStatus($function_name: String, $status: String) {\\n                  insert_indexer_state_one(object: {function_name: $function_name, status: $status, current_block_height: 0 }, on_conflict: { constraint: indexer_state_pkey, update_columns: status }) {\\n                    function_name\\n                    status\\n                  }\\n                }\\n            ","variables":{"function_name":"buildnear.testnet/test","status":"RUNNING"}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"\\n                query {\\n                    posts(where: { id: { _eq: 1 } }) {\\n                        id\\n                    }\\n                }\\n            "}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "buildnear_testnet",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"\\n                mutation {\\n                    insert_comments(\\n                        objects: {account_id: \\"morgs.near\\", block_height: 82699904, content: \\"cool post\\", post_id: 1}\\n                    ) {\\n                        returning {\\n                            id\\n                        }\\n                    }\\n                }\\n            "}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "buildnear_testnet",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"mutation WriteBlock($function_name: String!, $block_height: numeric!) {\\n                  insert_indexer_state(\\n                    objects: {current_block_height: $block_height, function_name: $function_name}\\n                    on_conflict: {constraint: indexer_state_pkey, update_columns: current_block_height}\\n                  ) {\\n                    returning {\\n                      current_block_height\\n                      function_name\\n                    }\\n                  }\\n                }","variables":{"function_name":"buildnear.testnet/test","block_height":82699904}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
]
`;

exports[`Indexer unit tests Indexer.runFunctions() catches errors 1`] = `
[
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"mutation writeLog($function_name: String!, $block_height: numeric!, $message: String!){\\n                insert_indexer_log_entries_one(object: {function_name: $function_name, block_height: $block_height, message: $message}) {id}\\n             }","variables":{"function_name":"buildnear.testnet/test","block_height":456,"message":"Running function buildnear.testnet/test, lag is: NaNms from block timestamp"}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"\\n                mutation SetStatus($function_name: String, $status: String) {\\n                  insert_indexer_state_one(object: {function_name: $function_name, status: $status, current_block_height: 0 }, on_conflict: { constraint: indexer_state_pkey, update_columns: status }) {\\n                    function_name\\n                    status\\n                  }\\n                }\\n            ","variables":{"function_name":"buildnear.testnet/test","status":"RUNNING"}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"mutation writeLog($function_name: String!, $block_height: numeric!, $message: String!){\\n                insert_indexer_log_entries_one(object: {function_name: $function_name, block_height: $block_height, message: $message}) {id}\\n             }","variables":{"function_name":"buildnear.testnet/test","block_height":456,"message":"Error running IndexerFunction:boom"}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"\\n                mutation SetStatus($function_name: String, $status: String) {\\n                  insert_indexer_state_one(object: {function_name: $function_name, status: $status, current_block_height: 0 }, on_conflict: { constraint: indexer_state_pkey, update_columns: status }) {\\n                    function_name\\n                    status\\n                  }\\n                }\\n            ","variables":{"function_name":"buildnear.testnet/test","status":"STOPPED"}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
]
`;

exports[`Indexer unit tests Indexer.runFunctions() logs provisioning failures 1`] = `
[
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"mutation writeLog($function_name: String!, $block_height: numeric!, $message: String!){\\n                insert_indexer_log_entries_one(object: {function_name: $function_name, block_height: $block_height, message: $message}) {id}\\n             }","variables":{"function_name":"morgs.near/test","block_height":82699904,"message":"Running function morgs.near/test, lag is: NaNms from block timestamp"}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"\\n                mutation SetStatus($function_name: String, $status: String) {\\n                  insert_indexer_state_one(object: {function_name: $function_name, status: $status, current_block_height: 0 }, on_conflict: { constraint: indexer_state_pkey, update_columns: status }) {\\n                    function_name\\n                    status\\n                  }\\n                }\\n            ","variables":{"function_name":"morgs.near/test","status":"PROVISIONING"}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"mutation writeLog($function_name: String!, $block_height: numeric!, $message: String!){\\n                insert_indexer_log_entries_one(object: {function_name: $function_name, block_height: $block_height, message: $message}) {id}\\n             }","variables":{"function_name":"morgs.near/test","block_height":82699904,"message":"Provisioning endpoint: starting"}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"mutation writeLog($function_name: String!, $block_height: numeric!, $message: String!){\\n                insert_indexer_log_entries_one(object: {function_name: $function_name, block_height: $block_height, message: $message}) {id}\\n             }","variables":{"function_name":"morgs.near/test","block_height":82699904,"message":"Provisioning endpoint: failure:something went wrong with provisioning"}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"\\n                mutation SetStatus($function_name: String, $status: String) {\\n                  insert_indexer_state_one(object: {function_name: $function_name, status: $status, current_block_height: 0 }, on_conflict: { constraint: indexer_state_pkey, update_columns: status }) {\\n                    function_name\\n                    status\\n                  }\\n                }\\n            ","variables":{"function_name":"morgs.near/test","status":"STOPPED"}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
]
`;

exports[`Indexer unit tests Indexer.runFunctions() should execute all functions against the current block 1`] = `
[
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"mutation writeLog($function_name: String!, $block_height: numeric!, $message: String!){\\n                insert_indexer_log_entries_one(object: {function_name: $function_name, block_height: $block_height, message: $message}) {id}\\n             }","variables":{"function_name":"buildnear.testnet/test","block_height":456,"message":"Running function buildnear.testnet/test, lag is: NaNms from block timestamp"}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"\\n                mutation SetStatus($function_name: String, $status: String) {\\n                  insert_indexer_state_one(object: {function_name: $function_name, status: $status, current_block_height: 0 }, on_conflict: { constraint: indexer_state_pkey, update_columns: status }) {\\n                    function_name\\n                    status\\n                  }\\n                }\\n            ","variables":{"function_name":"buildnear.testnet/test","status":"RUNNING"}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"mutation { set(functionName: \\"buildnear.testnet/test\\", key: \\"height\\", data: \\"456\\")}"}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "buildnear_testnet",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"mutation WriteBlock($function_name: String!, $block_height: numeric!) {\\n                  insert_indexer_state(\\n                    objects: {current_block_height: $block_height, function_name: $function_name}\\n                    on_conflict: {constraint: indexer_state_pkey, update_columns: current_block_height}\\n                  ) {\\n                    returning {\\n                      current_block_height\\n                      function_name\\n                    }\\n                  }\\n                }","variables":{"function_name":"buildnear.testnet/test","block_height":456}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
]
`;

exports[`Indexer unit tests Indexer.runFunctions() supplies the required role to the GraphQL endpoint 1`] = `
[
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"mutation writeLog($function_name: String!, $block_height: numeric!, $message: String!){\\n                insert_indexer_log_entries_one(object: {function_name: $function_name, block_height: $block_height, message: $message}) {id}\\n             }","variables":{"function_name":"morgs.near/test","block_height":82699904,"message":"Running function morgs.near/test, lag is: NaNms from block timestamp"}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"\\n                mutation SetStatus($function_name: String, $status: String) {\\n                  insert_indexer_state_one(object: {function_name: $function_name, status: $status, current_block_height: 0 }, on_conflict: { constraint: indexer_state_pkey, update_columns: status }) {\\n                    function_name\\n                    status\\n                  }\\n                }\\n            ","variables":{"function_name":"morgs.near/test","status":"RUNNING"}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"mutation { set(functionName: \\"buildnear.testnet/test\\", key: \\"height\\", data: \\"82699904\\")}"}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "morgs_near",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
  [
    "mock-hasura-endpoint/v1/graphql",
    {
      "body": "{"query":"mutation WriteBlock($function_name: String!, $block_height: numeric!) {\\n                  insert_indexer_state(\\n                    objects: {current_block_height: $block_height, function_name: $function_name}\\n                    on_conflict: {constraint: indexer_state_pkey, update_columns: current_block_height}\\n                  ) {\\n                    returning {\\n                      current_block_height\\n                      function_name\\n                    }\\n                  }\\n                }","variables":{"function_name":"morgs.near/test","block_height":82699904}}",
      "headers": {
        "Content-Type": "application/json",
        "X-Hasura-Admin-Secret": "mock-hasura-secret",
        "X-Hasura-Role": "append",
        "X-Hasura-Use-Backend-Only-Permissions": "true",
      },
      "method": "POST",
    },
  ],
]
`;
